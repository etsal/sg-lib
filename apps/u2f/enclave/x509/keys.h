#ifndef __KEYS_H__
#define __KEYS_H__

#include "BearSSL/inc/bearssl.h"

/* Root CA Key*/
static unsigned char root_ca_private_key_arr[] = { 0xFF, 0x40, 0x9F, 0x56, 0x49,
	0xD0, 0xF6, 0x59, 0xD7, 0xCD, 0xCD, 0x92, 0x44, 0x3D, 0x61, 0x2C, 0x81,
	0xA9, 0x55, 0x08, 0xF8, 0xC9, 0x75, 0xD4, 0x15, 0xFB, 0x97, 0xA3, 0xB3,
	0x24, 0xE4, 0x7B };

static unsigned char root_ca_domain_name[] = { // root ca domain name
	0x30, 0x3E, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
	0x02, 0x43, 0x41, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x08,
	0x0C, 0x0A, 0x53, 0x6F, 0x6D, 0x65, 0x2D, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x31, 0x0C, 0x30, 0x0A, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x0C, 0x03, 0x52,
	0x43, 0x53, 0x31, 0x0C, 0x30, 0x0A, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C,
	0x03, 0x72, 0x63, 0x73
};

static unsigned char root_ca_public_key_arr[] = { // root ca public key
	0x04, 0x47, 0x3A, 0x16, 0x6B, 0x45, 0x15, 0xE3, 0x62, 0xAB, 0x2D, 0xB8,
	0x0C, 0xD1, 0x69, 0xE4, 0x16, 0xE0, 0x24, 0xD0, 0x40, 0xA4, 0x35, 0x5A,
	0x87, 0x4D, 0x1E, 0x29, 0x34, 0xFF, 0x46, 0x43, 0xAE, 0xEE, 0xFC, 0xAA,
	0x7E, 0x35, 0x70, 0xB3, 0x45, 0xE6, 0x3B, 0xD5, 0x87, 0x77, 0x69, 0x0A,
	0xC0, 0xF1, 0x2C, 0x0C, 0x50, 0x8D, 0xAD, 0xF4, 0x2B, 0xCC, 0x9C, 0x60,
	0xED, 0x01, 0x0B, 0xEA, 0xF7
};

static br_ec_private_key root_ca_private_key = { BR_EC_secp256r1,
	root_ca_private_key_arr, sizeof root_ca_private_key_arr };

static br_ec_public_key root_ca_public_key = { BR_EC_secp256r1,
	root_ca_public_key_arr, sizeof root_ca_public_key_arr };

static const br_x509_trust_anchor TAs[1] = { { { (unsigned char *)
						       root_ca_domain_name,
						   sizeof root_ca_domain_name },
    BR_X509_TA_CA,
    { BR_KEYTYPE_EC,
	{ .ec = {
	      BR_EC_secp256r1,
	      (unsigned char *)root_ca_public_key_arr,
	      sizeof root_ca_public_key_arr,
	  } } } } };

#define TAs_NUM 1

/* Attestation Key Pair */
static unsigned char device_attest_private_key_arr[] = { 0xF7, 0x6D, 0x47, 0x0E,
	0xD3, 0xEF, 0xF3, 0x0C, 0x0D, 0x4B, 0x92, 0x50, 0x2E, 0xF0, 0x74, 0x3A,
	0x26, 0x54, 0x14, 0x17, 0x2C, 0x58, 0x8D, 0x29, 0xF6, 0xE6, 0xC4, 0xBB,
	0x06, 0x3E, 0x77, 0x1A };

static unsigned char device_attest_public_key_arr[] = { 0x04, 0x64, 0x10, 0xC0,
	0x0A, 0x5E, 0x59, 0xAD, 0x56, 0x87, 0x65, 0x02, 0xD1, 0x1F, 0xCF, 0x0C,
	0x6F, 0x96, 0xD8, 0xB7, 0xAD, 0x0C, 0xC1, 0x25, 0xFF, 0xB9, 0x71, 0x41,
	0xE9, 0x6D, 0x01, 0x30, 0x19, 0x26, 0x0F, 0x93, 0xEB, 0x4E, 0x1E, 0x42,
	0x2F, 0xDE, 0x43, 0x5F, 0xEC, 0xA9, 0x5B, 0x5A, 0x93, 0xA1, 0x1D, 0xE7,
	0x15, 0x08, 0x6A, 0x82, 0x87, 0xAB, 0x0C, 0x26, 0x2B, 0x39, 0x58, 0x57,
	0x6A };
static br_ec_private_key device_attest_private_key = { BR_EC_secp256r1,
	device_attest_private_key_arr, sizeof device_attest_private_key_arr };

static br_ec_public_key device_attest_public_key = { BR_EC_secp256r1,
	device_attest_public_key_arr, sizeof device_attest_public_key_arr };

/* Site Key Pair */
static unsigned char device_site_private_key_arr[] = { 0x4D, 0x6C, 0x2E, 0x0B,
	0x88, 0x58, 0x82, 0xA5, 0x72, 0xCD, 0xCD, 0x73, 0xE5, 0x0D, 0xB9, 0x8E,
	0x35, 0xCE, 0xF7, 0x5D, 0xCD, 0x87, 0xAF, 0x39, 0xD4, 0x62, 0xB7, 0x1C,
	0x44, 0x00, 0x87, 0x31 };

static unsigned char device_site_public_key_arr[] = {
	0x04, 0xA1, 0x2C, 0x08, 0x84, 0x63, 0x15, 0x87, 0x60, 0x21, 0x92, 0x74,
	0xE5, 0x82, 0xE3, 0x5C, 0x35, 0x61, 0xEB, 0xCD, 0x0C, 0x13, 0x89, 0xC0,
	0xEE, 0x97, 0x2B, 0xA8, 0x75, 0xDB, 0x76, 0xFA, 0xF4, 0x8E, 0xF6,
	0x8A, // 36 bytes end of x
	0xF9, 0x64, 0x49, 0x8E, 0x26, 0xB9, 0xE1, 0x73, 0xA7, 0x42, 0x22, 0xDA,
	0x66, 0x60, 0x40, 0x5F, 0x14, 0x6F, 0x69, 0xE8, 0x0B, 0x9C, 0xB1, 0x26,
	0x5D, 0xC5, 0xDC, 0x7D, 0xAF // 29 bytes end of y
};

static br_ec_private_key device_site_private_key = { BR_EC_secp256r1,
	device_site_private_key_arr, sizeof device_site_private_key_arr };

static br_ec_public_key device_site_public_key = { BR_EC_secp256r1,
	device_site_public_key_arr, sizeof device_site_public_key_arr };

static unsigned char device_site_public_key_2_arr[] = { 0x04, 0xEA, 0x6B, 0x57,
	0x42, 0xFF, 0xD1, 0xB7, 0xAD, 0x1D, 0xAE, 0xFA, 0x1D, 0x5A, 0xB7, 0x88,
	0x72, 0xF2, 0x78, 0x48, 0x68, 0x4C, 0x22, 0x5D, 0xCF, 0x23, 0xD4, 0x4C,
	0x5B, 0x0D, 0x63, 0xDC, 0x11, 0xCC, 0x35, 0xB7, 0x4F, 0xD4, 0x4F, 0xDA,
	0x16, 0xF1, 0x48, 0xAC, 0x52, 0x48, 0xF2, 0x5D, 0xA7, 0xA7, 0xE7, 0x0C,
	0x11, 0xAE, 0x6A, 0xCC, 0xCC, 0x86, 0x54, 0x85, 0xB4, 0x51, 0x1D, 0x51,
	0x7D };

static unsigned char device_site_private_key_2_arr[] = { 0x33, 0xB6, 0x5F, 0x3F,
	0xC8, 0x32, 0xE2, 0xA6, 0xC4, 0x32, 0x66, 0xBC, 0x47, 0x26, 0xBA, 0x49,
	0xC4, 0x60, 0x6C, 0x5B, 0x46, 0xA8, 0xD5, 0x5C, 0x8B, 0x2A, 0x4D, 0xBF,
	0x37, 0xD3, 0xFD, 0x4C };
static br_ec_private_key device_site_private_key_2 = { BR_EC_secp256r1,
	device_site_private_key_2_arr, sizeof device_site_private_key_arr };

static br_ec_public_key device_site_public_key_2 = { BR_EC_secp256r1,
	device_site_public_key_2_arr, sizeof device_site_public_key_arr };

#endif
