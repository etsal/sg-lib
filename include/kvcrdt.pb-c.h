/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kvcrdt.proto */

#ifndef PROTOBUF_C_kvcrdt_2eproto__INCLUDED
#define PROTOBUF_C_kvcrdt_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "vvec.pb-c.h"

typedef struct _KvcrdtPair KvcrdtPair;
typedef struct _KvcrdtTable KvcrdtTable;

/* --- enums --- */

/* --- messages --- */

struct _KvcrdtPair {
  ProtobufCMessage base;
  uint64_t key;
  ProtobufCBinaryData value;
  VersionVector *versions;
};
#define KVCRDT_PAIR__INIT                                                      \
  {                                                                            \
    PROTOBUF_C_MESSAGE_INIT(&kvcrdt_pair__descriptor)                          \
    , 0, {0, NULL}, NULL                                                       \
  }

struct _KvcrdtTable {
  ProtobufCMessage base;
  uint64_t uid;
  size_t n_pairs;
  KvcrdtPair **pairs;
  VersionVector *versions;
};
#define KVCRDT_TABLE__INIT                                                     \
  {                                                                            \
    PROTOBUF_C_MESSAGE_INIT(&kvcrdt_table__descriptor)                         \
    , 0, 0, NULL, NULL                                                         \
  }

/* KvcrdtPair methods */
void kvcrdt_pair__init(KvcrdtPair *message);
size_t kvcrdt_pair__get_packed_size(const KvcrdtPair *message);
size_t kvcrdt_pair__pack(const KvcrdtPair *message, uint8_t *out);
size_t kvcrdt_pair__pack_to_buffer(const KvcrdtPair *message,
                                   ProtobufCBuffer *buffer);
KvcrdtPair *kvcrdt_pair__unpack(ProtobufCAllocator *allocator, size_t len,
                                const uint8_t *data);
void kvcrdt_pair__free_unpacked(KvcrdtPair *message,
                                ProtobufCAllocator *allocator);
/* KvcrdtTable methods */
void kvcrdt_table__init(KvcrdtTable *message);
size_t kvcrdt_table__get_packed_size(const KvcrdtTable *message);
size_t kvcrdt_table__pack(const KvcrdtTable *message, uint8_t *out);
size_t kvcrdt_table__pack_to_buffer(const KvcrdtTable *message,
                                    ProtobufCBuffer *buffer);
KvcrdtTable *kvcrdt_table__unpack(ProtobufCAllocator *allocator, size_t len,
                                  const uint8_t *data);
void kvcrdt_table__free_unpacked(KvcrdtTable *message,
                                 ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*KvcrdtPair_Closure)(const KvcrdtPair *message,
                                   void *closure_data);
typedef void (*KvcrdtTable_Closure)(const KvcrdtTable *message,
                                    void *closure_data);

/* --- services --- */

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor kvcrdt_pair__descriptor;
extern const ProtobufCMessageDescriptor kvcrdt_table__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_kvcrdt_2eproto__INCLUDED */
